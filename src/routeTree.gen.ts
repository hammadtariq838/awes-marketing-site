/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as R404Import } from './routes/__404'

// Create Virtual Routes

const Auth2RouteLazyImport = createFileRoute('/auth2')()
const MarketingRouteLazyImport = createFileRoute('/_marketing')()
const DashboardRouteLazyImport = createFileRoute('/_dashboard')()
const MarketingIndexLazyImport = createFileRoute('/_marketing/')()
const Auth2RegisterLazyImport = createFileRoute('/auth2/register')()
const Auth2LoginLazyImport = createFileRoute('/auth2/login')()
const MarketingServicesLazyImport = createFileRoute('/_marketing/services')()
const MarketingAboutUsLazyImport = createFileRoute('/_marketing/about-us')()
const DashboardDashboardLazyImport = createFileRoute('/_dashboard/dashboard')()
const DashboardApplicationLazyImport = createFileRoute(
  '/_dashboard/application',
)()
const AuthResetVerificationLazyImport = createFileRoute(
  '/_auth/reset-verification',
)()
const AuthResetRequestLazyImport = createFileRoute('/_auth/reset-request')()
const AuthResetPasswordLazyImport = createFileRoute('/_auth/reset-password')()
const AuthRegisterLazyImport = createFileRoute('/_auth/register')()
const AuthLoginLazyImport = createFileRoute('/_auth/login')()
const AuthEmailVerificationLazyImport = createFileRoute(
  '/_auth/email-verification',
)()

// Create/Update Routes

const Auth2RouteLazyRoute = Auth2RouteLazyImport.update({
  path: '/auth2',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth2/route.lazy').then((d) => d.Route))

const MarketingRouteLazyRoute = MarketingRouteLazyImport.update({
  id: '/_marketing',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_marketing/route.lazy').then((d) => d.Route),
)

const DashboardRouteLazyRoute = DashboardRouteLazyImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_dashboard/route.lazy').then((d) => d.Route),
)

const R404Route = R404Import.update({
  id: '/__404',
  getParentRoute: () => rootRoute,
} as any)

const MarketingIndexLazyRoute = MarketingIndexLazyImport.update({
  path: '/',
  getParentRoute: () => MarketingRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_marketing/index.lazy').then((d) => d.Route),
)

const Auth2RegisterLazyRoute = Auth2RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => Auth2RouteLazyRoute,
} as any).lazy(() =>
  import('./routes/auth2/register.lazy').then((d) => d.Route),
)

const Auth2LoginLazyRoute = Auth2LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => Auth2RouteLazyRoute,
} as any).lazy(() => import('./routes/auth2/login.lazy').then((d) => d.Route))

const MarketingServicesLazyRoute = MarketingServicesLazyImport.update({
  path: '/services',
  getParentRoute: () => MarketingRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_marketing/services.lazy').then((d) => d.Route),
)

const MarketingAboutUsLazyRoute = MarketingAboutUsLazyImport.update({
  path: '/about-us',
  getParentRoute: () => MarketingRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_marketing/about-us.lazy').then((d) => d.Route),
)

const DashboardDashboardLazyRoute = DashboardDashboardLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => DashboardRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_dashboard/dashboard.lazy').then((d) => d.Route),
)

const DashboardApplicationLazyRoute = DashboardApplicationLazyImport.update({
  path: '/application',
  getParentRoute: () => DashboardRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/_dashboard/application.lazy').then((d) => d.Route),
)

const AuthResetVerificationLazyRoute = AuthResetVerificationLazyImport.update({
  path: '/reset-verification',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_auth/reset-verification.lazy').then((d) => d.Route),
)

const AuthResetRequestLazyRoute = AuthResetRequestLazyImport.update({
  path: '/reset-request',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_auth/reset-request.lazy').then((d) => d.Route),
)

const AuthResetPasswordLazyRoute = AuthResetPasswordLazyImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_auth/reset-password.lazy').then((d) => d.Route),
)

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_auth/register.lazy').then((d) => d.Route),
)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_auth/login.lazy').then((d) => d.Route))

const AuthEmailVerificationLazyRoute = AuthEmailVerificationLazyImport.update({
  path: '/email-verification',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/_auth/email-verification.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__404': {
      id: '/__404'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/_marketing': {
      id: '/_marketing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MarketingRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth2': {
      id: '/auth2'
      path: '/auth2'
      fullPath: '/auth2'
      preLoaderRoute: typeof Auth2RouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/email-verification': {
      id: '/_auth/email-verification'
      path: '/email-verification'
      fullPath: '/email-verification'
      preLoaderRoute: typeof AuthEmailVerificationLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/reset-request': {
      id: '/_auth/reset-request'
      path: '/reset-request'
      fullPath: '/reset-request'
      preLoaderRoute: typeof AuthResetRequestLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/reset-verification': {
      id: '/_auth/reset-verification'
      path: '/reset-verification'
      fullPath: '/reset-verification'
      preLoaderRoute: typeof AuthResetVerificationLazyImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/application': {
      id: '/_dashboard/application'
      path: '/application'
      fullPath: '/application'
      preLoaderRoute: typeof DashboardApplicationLazyImport
      parentRoute: typeof DashboardRouteLazyImport
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardLazyImport
      parentRoute: typeof DashboardRouteLazyImport
    }
    '/_marketing/about-us': {
      id: '/_marketing/about-us'
      path: '/about-us'
      fullPath: '/about-us'
      preLoaderRoute: typeof MarketingAboutUsLazyImport
      parentRoute: typeof MarketingRouteLazyImport
    }
    '/_marketing/services': {
      id: '/_marketing/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof MarketingServicesLazyImport
      parentRoute: typeof MarketingRouteLazyImport
    }
    '/auth2/login': {
      id: '/auth2/login'
      path: '/login'
      fullPath: '/auth2/login'
      preLoaderRoute: typeof Auth2LoginLazyImport
      parentRoute: typeof Auth2RouteLazyImport
    }
    '/auth2/register': {
      id: '/auth2/register'
      path: '/register'
      fullPath: '/auth2/register'
      preLoaderRoute: typeof Auth2RegisterLazyImport
      parentRoute: typeof Auth2RouteLazyImport
    }
    '/_marketing/': {
      id: '/_marketing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MarketingIndexLazyImport
      parentRoute: typeof MarketingRouteLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  DashboardRouteLazyRoute: DashboardRouteLazyRoute.addChildren({
    DashboardApplicationLazyRoute,
    DashboardDashboardLazyRoute,
  }),
  MarketingRouteLazyRoute: MarketingRouteLazyRoute.addChildren({
    MarketingAboutUsLazyRoute,
    MarketingServicesLazyRoute,
    MarketingIndexLazyRoute,
  }),
  Auth2RouteLazyRoute: Auth2RouteLazyRoute.addChildren({
    Auth2LoginLazyRoute,
    Auth2RegisterLazyRoute,
  }),
  AuthEmailVerificationLazyRoute,
  AuthLoginLazyRoute,
  AuthRegisterLazyRoute,
  AuthResetPasswordLazyRoute,
  AuthResetRequestLazyRoute,
  AuthResetVerificationLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/__404",
        "/_dashboard",
        "/_marketing",
        "/auth2",
        "/_auth/email-verification",
        "/_auth/login",
        "/_auth/register",
        "/_auth/reset-password",
        "/_auth/reset-request",
        "/_auth/reset-verification"
      ]
    },
    "/__404": {
      "filePath": "__404.tsx"
    },
    "/_dashboard": {
      "filePath": "_dashboard/route.lazy.tsx",
      "children": [
        "/_dashboard/application",
        "/_dashboard/dashboard"
      ]
    },
    "/_marketing": {
      "filePath": "_marketing/route.lazy.tsx",
      "children": [
        "/_marketing/about-us",
        "/_marketing/services",
        "/_marketing/"
      ]
    },
    "/auth2": {
      "filePath": "auth2/route.lazy.tsx",
      "children": [
        "/auth2/login",
        "/auth2/register"
      ]
    },
    "/_auth/email-verification": {
      "filePath": "_auth/email-verification.lazy.tsx"
    },
    "/_auth/login": {
      "filePath": "_auth/login.lazy.tsx"
    },
    "/_auth/register": {
      "filePath": "_auth/register.lazy.tsx"
    },
    "/_auth/reset-password": {
      "filePath": "_auth/reset-password.lazy.tsx"
    },
    "/_auth/reset-request": {
      "filePath": "_auth/reset-request.lazy.tsx"
    },
    "/_auth/reset-verification": {
      "filePath": "_auth/reset-verification.lazy.tsx"
    },
    "/_dashboard/application": {
      "filePath": "_dashboard/application.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/dashboard": {
      "filePath": "_dashboard/dashboard.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_marketing/about-us": {
      "filePath": "_marketing/about-us.lazy.tsx",
      "parent": "/_marketing"
    },
    "/_marketing/services": {
      "filePath": "_marketing/services.lazy.tsx",
      "parent": "/_marketing"
    },
    "/auth2/login": {
      "filePath": "auth2/login.lazy.tsx",
      "parent": "/auth2"
    },
    "/auth2/register": {
      "filePath": "auth2/register.lazy.tsx",
      "parent": "/auth2"
    },
    "/_marketing/": {
      "filePath": "_marketing/index.lazy.tsx",
      "parent": "/_marketing"
    }
  }
}
ROUTE_MANIFEST_END */
